[2012-03-14 13:26:27] [Arc.Downloader] [VERBOSE] [27715/65397488] Maximal inactivity time: 300 s
[2012-03-14 13:26:27] [Arc.Downloader] [INFO] [27715/65397488] Downloader started
[2012-03-14 13:26:27] [Arc.Downloader] [VERBOSE] [27715/65397488] Not invoking janitor because it's not enabled in the config file
[2012-03-14 13:26:27] [Arc.Downloader] [INFO] [27715/65397488] Checking user uploadable file: /input.tgz
[2012-03-14 13:26:27] [Arc.Downloader] [INFO] [27715/65397488] User has uploaded file /input.tgz
[2012-03-14 13:26:27] [Arc.Downloader] [INFO] [27715/65397488] Checking user uploadable file: /geotop_1_224_20120227_static
[2012-03-14 13:26:27] [Arc.Downloader] [INFO] [27715/65397488] Checking user uploadable file: /geotop_wrap.sh
[2012-03-14 13:27:27] [Arc.Downloader] [INFO] [27715/65397488] User has uploaded file /geotop_1_224_20120227_static
[2012-03-14 13:27:27] [Arc.Downloader] [INFO] [27715/65397488] User has uploaded file /geotop_wrap.sh
[2012-03-14 13:27:27] [Arc.Downloader] [INFO] [27715/65397488] Leaving downloader (0)
----- starting submit_sge_job -----
joboption_directory='/share/grid/session/2749513317279862110240234'
joboption_arg_0='./geotop_wrap.sh'
joboption_arg_1='input.tgz'
joboption_arg_2='./geotop_1_224_20120227_static'
joboption_stdin='/dev/null'
joboption_stdout='/share/grid/session/2749513317279862110240234/ggeotop.log'
joboption_stderr='/share/grid/session/2749513317279862110240234/ggeotop.log'
joboption_env_0=GRID_GLOBAL_JOBID='gsiftp://idgc3grid01.uzh.ch:2811/2749513317279862110240234'
joboption_cputime=28800
joboption_walltime=28800
joboption_memory=2000
joboption_count=1
joboption_runtime_0='APPS/EARTH/GEOTOP-1.224'
joboption_jobname='GEOtop_public_test'
joboption_queue='all.q'
joboption_starttime=
joboption_gridid='2749513317279862110240234'
joboption_inputfile_0='/input.tgz'
joboption_inputfile_1='/geotop_1_224_20120227_static'
joboption_inputfile_2='/geotop_wrap.sh'
joboption_outputfile_0='/.arc'
joboption_outputfile_1='/'
joboption_outputfile_2='/ggeotop.log'
SGE jobname: GEOtop_public_t
SGE job script built
SGE script follows:
#!/bin/sh
# SGE batch job script built by grid-manager
#$ -r n
#$ -m n
#$ -j y
#$ -o /share/grid/session/2749513317279862110240234/.comment
#$ -q all.q
#$ -N "GEOtop_public_t"
#$ -l s_cpu=::28800 -l h_cpu=::28800
#$ -l s_rt=::28800 -l h_rt=::28800

# Overide umask of execution node (sometime values are really strange)
umask 077
# Setting environment variables as specified by user
export 'GRID_GLOBAL_JOBID=gsiftp://idgc3grid01.uzh.ch:2811/2749513317279862110240234'

RUNTIME_JOB_DIR=/share/grid/session/2749513317279862110240234
RUNTIME_JOB_STDIN=/dev/null
RUNTIME_JOB_STDOUT=/share/grid/session/2749513317279862110240234/ggeotop.log
RUNTIME_JOB_STDERR=/share/grid/session/2749513317279862110240234/ggeotop.log
RUNTIME_JOB_DIAG=/share/grid/session/2749513317279862110240234.diag
if [ ! -z "$RUNTIME_GRIDAREA_DIR" ] ; then
  RUNTIME_JOB_DIR=$RUNTIME_GRIDAREA_DIR/`basename $RUNTIME_JOB_DIR`
  RUNTIME_JOB_STDIN=`echo "$RUNTIME_JOB_STDIN" | sed "s#^$RUNTIME_JOB_DIR#$RUNTIME_GRIDAREA_DIR#"`
  RUNTIME_JOB_STDOUT=`echo "$RUNTIME_JOB_STDOUT" | sed "s#^$RUNTIME_JOB_DIR#$RUNTIME_GRIDAREA_DIR#"`
  RUNTIME_JOB_STDERR=`echo "$RUNTIME_JOB_STDERR" | sed "s#^$RUNTIME_JOB_DIR#$RUNTIME_GRIDAREA_DIR#"`
  RUNTIME_JOB_DIAG=`echo "$RUNTIME_JOB_DIAG" | sed "s#^$RUNTIME_JOB_DIR#$RUNTIME_GRIDAREA_DIR#"`
  RUNTIME_CONTROL_DIR=`echo "$RUNTIME_CONTROL_DIR" | sed "s#^$RUNTIME_JOB_DIR#$RUNTIME_GRIDAREA_DIR#"`
fi
RUNTIME_JOB_DIAG=$RUNTIME_JOB_DIR/.diag
RUNTIME_LOCAL_SCRATCH_DIR=${RUNTIME_LOCAL_SCRATCH_DIR:-}
RUNTIME_FRONTEND_SEES_NODE=${RUNTIME_FRONTEND_SEES_NODE:-}
RUNTIME_NODE_SEES_FRONTEND=${RUNTIME_NODE_SEES_FRONTEND:-yes}
  if [ ! -z "$RUNTIME_LOCAL_SCRATCH_DIR" ] && [ ! -z "$RUNTIME_NODE_SEES_FRONTEND" ]; then
    RUNTIME_NODE_JOB_DIR="$RUNTIME_LOCAL_SCRATCH_DIR"/`basename "$RUNTIME_JOB_DIR"`
    rm -rf "$RUNTIME_NODE_JOB_DIR"
    mkdir -p "$RUNTIME_NODE_JOB_DIR"
    # move directory contents
    for f in "$RUNTIME_JOB_DIR"/.* "$RUNTIME_JOB_DIR"/*; do 
      [ "$f" = "$RUNTIME_JOB_DIR/*" ] && continue # glob failed, no files
      [ "$f" = "$RUNTIME_JOB_DIR/." ] && continue
      [ "$f" = "$RUNTIME_JOB_DIR/.." ] && continue
      [ "$f" = "$RUNTIME_JOB_DIR/.diag" ] && continue
      [ "$f" = "$RUNTIME_JOB_DIR/.comment" ] && continue
      if ! mv "$f" "$RUNTIME_NODE_JOB_DIR"; then
        echo "Failed to move '$f' to '$RUNTIME_NODE_JOB_DIR'" 1>&2
        exit 1
      fi
    done
    if [ ! -z "$RUNTIME_FRONTEND_SEES_NODE" ] ; then
      # creating link for whole directory
       ln -s "$RUNTIME_FRONTEND_SEES_NODE"/`basename "$RUNTIME_JOB_DIR"` "$RUNTIME_JOB_DIR"
    else
      # keep stdout, stderr and control directory on frontend
      # recreate job directory
      mkdir -p "$RUNTIME_JOB_DIR"
      # make those files
      mkdir -p `dirname "$RUNTIME_JOB_STDOUT"`
      mkdir -p `dirname "$RUNTIME_JOB_STDERR"`
      touch "$RUNTIME_JOB_STDOUT"
      touch "$RUNTIME_JOB_STDERR"
      RUNTIME_JOB_STDOUT__=`echo "$RUNTIME_JOB_STDOUT" | sed "s#^${RUNTIME_JOB_DIR}#${RUNTIME_NODE_JOB_DIR}#"`
      RUNTIME_JOB_STDERR__=`echo "$RUNTIME_JOB_STDERR" | sed "s#^${RUNTIME_JOB_DIR}#${RUNTIME_NODE_JOB_DIR}#"`
      rm "$RUNTIME_JOB_STDOUT__" 2>/dev/null
      rm "$RUNTIME_JOB_STDERR__" 2>/dev/null
      if [ ! -z "$RUNTIME_JOB_STDOUT__" ] && [ "$RUNTIME_JOB_STDOUT" != "$RUNTIME_JOB_STDOUT__" ]; then
        ln -s "$RUNTIME_JOB_STDOUT" "$RUNTIME_JOB_STDOUT__"
      fi
      if [ "$RUNTIME_JOB_STDOUT__" != "$RUNTIME_JOB_STDERR__" ] ; then
        if [ ! -z "$RUNTIME_JOB_STDERR__" ] && [ "$RUNTIME_JOB_STDERR" != "$RUNTIME_JOB_STDERR__" ]; then
          ln -s "$RUNTIME_JOB_STDERR" "$RUNTIME_JOB_STDERR__"
        fi
      fi
      if [ ! -z "$RUNTIME_CONTROL_DIR" ] ; then
        # move control directory back to frontend
        RUNTIME_CONTROL_DIR__=`echo "$RUNTIME_CONTROL_DIR" | sed "s#^${RUNTIME_JOB_DIR}#${RUNTIME_NODE_JOB_DIR}#"`
        mv "$RUNTIME_CONTROL_DIR__" "$RUNTIME_CONTROL_DIR"
      fi
    fi
    # adjust stdin,stdout & stderr pointers
    RUNTIME_JOB_STDIN=`echo "$RUNTIME_JOB_STDIN" | sed "s#^${RUNTIME_JOB_DIR}#${RUNTIME_NODE_JOB_DIR}#"`
    RUNTIME_JOB_STDOUT=`echo "$RUNTIME_JOB_STDOUT" | sed "s#^${RUNTIME_JOB_DIR}#${RUNTIME_NODE_JOB_DIR}#"`
    RUNTIME_JOB_STDERR=`echo "$RUNTIME_JOB_STDERR" | sed "s#^${RUNTIME_JOB_DIR}#${RUNTIME_NODE_JOB_DIR}#"`
    RUNTIME_FRONTEND_JOB_DIR="$RUNTIME_JOB_DIR"
    RUNTIME_JOB_DIR="$RUNTIME_NODE_JOB_DIR"
  fi
  if [ -z "$RUNTIME_NODE_SEES_FRONTEND" ] ; then
    mkdir -p "$RUNTIME_JOB_DIR"
  fi

RESULT=0


if [ "$RESULT" = '0' ] ; then
# Running runtime scripts
export RUNTIME_CONFIG_DIR=${RUNTIME_CONFIG_DIR:-/share/grid/software}
runtimeenvironments=
if [ ! -z "$RUNTIME_CONFIG_DIR" ] ; then
  if [ -r "${RUNTIME_CONFIG_DIR}/APPS/EARTH/GEOTOP-1.224" ] ; then
    runtimeenvironments="${runtimeenvironments}APPS/EARTH/GEOTOP-1.224;"
    . ${RUNTIME_CONFIG_DIR}/APPS/EARTH/GEOTOP-1.224 1 
    if [ $? -ne '0' ] ; then 
      echo "Runtime APPS/EARTH/GEOTOP-1.224 script failed " 1>&2 
      echo "Runtime APPS/EARTH/GEOTOP-1.224 script failed " 1>"$RUNTIME_JOB_DIAG" 
      exit 1
    fi 
  fi
fi

echo "runtimeenvironments=$runtimeenvironments" >> "$RUNTIME_JOB_DIAG"
  # Changing to session directory
  HOME=$RUNTIME_JOB_DIR
  export HOME
  if ! cd "$RUNTIME_JOB_DIR"; then
    echo "Failed to switch to '$RUNTIME_JOB_DIR'" 1>&2
    RESULT=1
  fi
  if [ ! -z "$RESULT" ] && [ "$RESULT" != 0 ]; then
    exit $RESULT
  fi
nodename=`/bin/hostname -f`
echo "nodename=$nodename" >> "$RUNTIME_JOB_DIAG"
echo "ExecutionUnits=1" >> "$RUNTIME_JOB_DIAG"
executable='./geotop_wrap.sh'
# See if executable is a script, and extract the name of the interpreter
line1=`dd if="$executable" count=1 2>/dev/null | head -n 1`
command=`echo $line1 | sed -n 's/^#! *//p'`
interpreter=`echo $command | awk '{print $1}'`
if [ "$interpreter" = /usr/bin/env ]; then interpreter=`echo $command | awk '{print $2}'`; fi
# If it's a script and the interpreter is not found ...
[ "x$interpreter" = x ] || type "$interpreter" > /dev/null 2>&1 || {

  echo "Cannot run $executable: $interpreter: not found" "$output_redirect 1>&2"
  exit 1; }
GNU_TIME='/usr/bin/time'
if [ ! -z "$GNU_TIME" ] && ! "$GNU_TIME" --version >/dev/null 2>&1; then
  echo "WARNING: GNU time not found at: $GNU_TIME" 2>&1;
  GNU_TIME=
fi 

if [ -z "$GNU_TIME" ] ; then
   "./geotop_wrap.sh" "input.tgz" "./geotop_1_224_20120227_static" <$RUNTIME_JOB_STDIN 1>$RUNTIME_JOB_STDOUT 2>&1
else
  $GNU_TIME -o "$RUNTIME_JOB_DIAG" -a -f 'WallTime=%es\nKernelTime=%Ss\nUserTime=%Us\nCPUUsage=%P\nMaxResidentMemory=%MkB\nAverageResidentMemory=%tkB\nAverageTotalMemory=%KkB\nAverageUnsharedMemory=%DkB\nAverageUnsharedStack=%pkB\nAverageSharedMemory=%XkB\nPageSize=%ZB\nMajorPageFaults=%F\nMinorPageFaults=%R\nSwaps=%W\nForcedSwitches=%c\nWaitSwitches=%w\nInputs=%I\nOutputs=%O\nSocketReceived=%r\nSocketSent=%s\nSignals=%k\n'  "./geotop_wrap.sh" "input.tgz" "./geotop_1_224_20120227_static" <$RUNTIME_JOB_STDIN 1>$RUNTIME_JOB_STDOUT 2>&1

fi
RESULT=$?

fi
if [ ! -z "$RUNTIME_CONFIG_DIR" ] ; then
  if [ -r "${RUNTIME_CONFIG_DIR}/APPS/EARTH/GEOTOP-1.224" ] ; then
    . ${RUNTIME_CONFIG_DIR}/APPS/EARTH/GEOTOP-1.224 2 
  fi
fi

  if [ ! -z "$RUNTIME_LOCAL_SCRATCH_DIR" ] && [ ! -z "$RUNTIME_NODE_SEES_FRONTEND" ]; then 
    if [ ! -z "$RUNTIME_FRONTEND_SEES_NODE" ] ; then
      # just move it
      rm -rf "$RUNTIME_FRONTEND_JOB_DIR"
      destdir=`dirname "$RUNTIME_FRONTEND_JOB_DIR"`
      if ! mv "$RUNTIME_NODE_JOB_DIR" "$destdir"; then
        echo "Failed to move '$RUNTIME_NODE_JOB_DIR' to '$destdir'" 1>&2
        RESULT=1
      fi
    else
      # remove links
      rm -f "$RUNTIME_JOB_STDOUT" 2>/dev/null
      rm -f "$RUNTIME_JOB_STDERR" 2>/dev/null
      # move directory contents
      for f in "$RUNTIME_NODE_JOB_DIR"/.* "$RUNTIME_NODE_JOB_DIR"/*; do 
        [ "$f" = "$RUNTIME_NODE_JOB_DIR/*" ] && continue # glob failed, no files
        [ "$f" = "$RUNTIME_NODE_JOB_DIR/." ] && continue
        [ "$f" = "$RUNTIME_NODE_JOB_DIR/.." ] && continue
        [ "$f" = "$RUNTIME_NODE_JOB_DIR/.diag" ] && continue
        [ "$f" = "$RUNTIME_NODE_JOB_DIR/.comment" ] && continue
        if ! mv "$f" "$RUNTIME_FRONTEND_JOB_DIR"; then
          echo "Failed to move '$f' to '$RUNTIME_FRONTEND_JOB_DIR'" 1>&2
          RESULT=1
        fi
      done
      rm -rf "$RUNTIME_NODE_JOB_DIR"
    fi
  fi
  echo "exitcode=$RESULT" >> "$RUNTIME_JOB_DIAG"
  exit $RESULT

local job id: 661284
job submitted successfully!
----- exiting submit_sge_job -----
++++++++++++++++++++++++++
Resources:
++++++++++++++++++++++++++
req_memory=2000 MB
req_cputime=28800
req_walltime=28800
used_memory=139708 kB
used_cputime=0
used_walltime=1
++++++++++++++++++++++++++
------- Contents of output stream forwarded by the LRMS ---------
------------------------- End of output -------------------------
[2012-03-14 13:27:58] [Arc.Uploader] [VERBOSE] [1325/486241008] Maximal inactivity time: 300 s
[2012-03-14 13:27:58] [Arc.Uploader] [INFO] [1325/486241008] Uploader started
[2012-03-14 13:27:58] [Arc.Uploader] [INFO] [1325/486241008] Leaving uploader (0)
