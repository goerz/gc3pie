========================================================================
    Installation of GC3Utils
========================================================================

:Author:   Riccardo Murri <riccardo.murri@gmail.com>
:Date:     2010-10-06
:Revision: $Revision$


.. This file follows reStructuredText markup syntax; see
   http://docutils.sf.net/rst.html for more information


Installation
============

These instructions show how to install the GC3Utils from the GC3 svn
repository into their own python environment.

0. Prerequisites are: ``svn`` (package ``subversion`` in CentOS5 and
   Debian/Ubuntu), the Python development headers and libraries (package
   ``python-devel`` in CentOS5, ``python-dev`` in Debian/Ubuntu).
   These should be available in any decent Linux distribution.


1. If it's not already installed, get the `virtualenv` Python package
   and install it::

      wget http://bitbucket.org/ianb/virtualenv/get/tip.gz#egg=virtualenv-tip
      tar -xzf tip.gz && rm tip.gz 
      cd virtualenv/
 
    If you are installing as `root`, the following command is all you
    need:

      python setup.py install

    If instead you are installing as a normal, unprivileged user,
    things get more complicated::

      export PYTHONPATH=$HOME/lib/python:$PYTHONPATH
      export PATH=$PATH:$HOME/bin
      mkdir -p $HOME/lib/python
      python setup.py install --home $HOME

    (You will also need to add the two `export` lines above to the
    `$HOME/.bashrc` file -if using the `bash` shell- or to the
    `$HOME/.cshrc` file -if using the `tcsh` shell.)

    In any case, once `virtualenv` has been installed, you can exit
    its directory and remove it:
   
      cd ..
      rm -rf virtualenv


2. Create a virtuelnv to host the ``gc3utils`` installation::

       virtualenv gc3utils
       cd gc3utils/
       source bin/activate


3. Create a ``src/`` directory to host the Python sources and
   check-out the ``gc3utils`` files there::
     
       mkdir src
       cd src/
       svn co http://gc3pie.googlecode.com/svn/trunk/gc3utils
   
  
4. Install the ``gc3utils`` in "develop" mode, so any modification
   pulled from subversion is immediately reflected in the running environment::

       cd gc3utils/
       env CC=gcc ./setup.py develop 
       cd .. # back into the `src` directory

   This will place all the GC3Utils command into the ``gc3utils/bin/``
   directory.

5. Before you can actually run the GC3Utils, you need to have a
   working configuration file; `the ConfigurationFile Wiki page
   <http://code.google.com/p/gc3pie/wiki/ConfigurationFile>` provides
   an explanation of the syntax to use in configuration files.

   In order to use the ARC backend, you need the NorduGrid/ARC
   binaries installed on the same machine where GC3Utils are.
   You can find instructions for installing ARC at:
   http://www.nordugrid.org/documents/ng-client-install.html


   
Upgrade
=======

These instructions show how to upgrade the GC3Utils scripts to the
latest version found in the GC3 svn repository.

1. `cd` to the directory containing the GC3Utils virtualenv;
   assuming it's named ``gc3utils`` as in the above installation
   instructions, you can issue the commands::

     cd gc3utils/src

2. Upgrade the `gc3utils` source and run the `setup.py` script again:

     cd gc3utils
     svn up
     env CC=gcc ./setup.py develop
     cd ..



.. (for Emacs only)
..
  Local variables:
  mode: rst
  End:
